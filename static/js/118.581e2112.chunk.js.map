{"version":3,"file":"static/js/118.581e2112.chunk.js","mappings":"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","sources":["shared/components/ErrorMsg/ErrorMsg.styled.jsx","shared/components/ErrorMsg/ErrorMsg.jsx","modules/ContactForm/initialState.js","modules/ContactForm/fields.js","modules/ContactForm/ContactForm.jsx","modules/ContactList/ContactListItem/ContactListItem.jsx","modules/ContactList/ContactList.jsx","modules/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","modules/Phonebook/Phonebook.jsx","pages/ContactsPage.jsx","shared/hooks/useForm.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  margin-top: 10px;\n  color: red;\n  font-size: 18px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Text } from './ErrorMsg.styled';\n\nconst ErrorMsg = ({ error }) => {\n  return <Text>{error}</Text>;\n};\n\nErrorMsg.propTypes = {\n  error: PropTypes.string.isRequired,\n};\n\nexport default ErrorMsg;\n","export const initialState = {\n  name: '',\n  number: '',\n};\n","const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    label: 'Name',\n  },\n\n  number: {\n    type: 'tel',\n    name: 'number',\n    required: true,\n    label: 'Number',\n  },\n};\n\nexport default fields;\n","import PropTypes from 'prop-types';\nimport { Button, TextField, Box } from '@mui/material';\n\nimport { useForm } from 'shared/hooks/useForm';\nimport { initialState } from './initialState';\nimport fields from './fields';\n\nconst ContactForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, number } = state;\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <TextField\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={name}\n        onChange={handleChange}\n        margin=\"normal\"\n        {...fields.name}\n      />\n\n      <TextField\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        value={number}\n        onChange={handleChange}\n        margin=\"normal\"\n        {...fields.number}\n      />\n\n      <Button variant=\"contained\" type=\"submit\">\n        Add contact\n      </Button>\n    </Box>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { Button, ListItem, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ id, name, number, onDelete }) => {\n  return (\n    <ListItem sx={{ display: 'flex', justifyContent: 'space-between', pt: 0 }}>\n      <Typography>\n        {name}: {number}\n      </Typography>\n      <Button\n        sx={{ ml: 2 }}\n        variant=\"outlined\"\n        onClick={() => onDelete(id)}\n        type=\"button\"\n      >\n        Delete\n      </Button>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import { List } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nimport ContactListItem from './ContactListItem';\n\nconst ContactList = ({ contacts, onDelete }) => {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDelete={onDelete}\n        ></ContactListItem>\n      ))}\n    </List>\n  );\n};\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { TextField } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <TextField\n      sx={{ width: '100%' }}\n      label=\"Find contacts by name\"\n      onChange={onChange}\n      value={value}\n      type=\"text\"\n    />\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilteredContacts = ({ contacts, filter }) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.items.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","export const selectFilter = state => state.filter;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Typography, Grid } from '@mui/material';\n\nimport ErrorMsg from 'shared/components/ErrorMsg';\nimport Loader from 'shared/components/Loader';\nimport ContactForm from 'modules/ContactForm';\nimport ContactList from 'modules/ContactList';\nimport Filter from 'modules/Filter';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from 'redux/contacts/contacts-operations';\nimport {\n  selectContacts,\n  selectFilteredContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contacts-selectors';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { selectFilter } from 'redux/filter/filter-selectors';\n\nconst Phonebook = () => {\n  const contacts = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleSubmit = contact => {\n    const { name } = contact;\n\n    if (contacts.find(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    dispatch(addContact(contact));\n  };\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleFilter = e => dispatch(setFilter(e.target.value));\n\n  return (\n    <>\n      <Typography\n        variant=\"h1\"\n        sx={{ textAlign: 'center', fontSize: '3rem', mb: 4 }}\n      >\n        Phonebook\n      </Typography>\n      <Grid\n        container\n        sx={{\n          flexDirection: { xs: 'column', sm: 'row' },\n          gap: { xs: 6, md: 12 },\n        }}\n      >\n        <Grid item xs>\n          <Typography\n            sx={{ textAlign: 'center', fontSize: '2rem' }}\n            variant=\"h2\"\n          >\n            Add Contacts\n          </Typography>\n          <ContactForm onSubmit={handleSubmit} />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={6}\n          sx={{ alignSelf: { xs: 'center', sm: 'auto' } }}\n        >\n          <Typography\n            sx={{ textAlign: 'center', fontSize: '2rem', mb: 2 }}\n            variant=\"h2\"\n          >\n            Contacts\n          </Typography>\n          <Filter value={filter} onChange={handleFilter} />\n          {contacts.length > 0 && (\n            <ContactList contacts={filteredContacts} onDelete={handleDelete} />\n          )}\n        </Grid>\n      </Grid>\n      {isLoading && <Loader />}\n      {error && <ErrorMsg error={error} />}\n    </>\n  );\n};\n\nexport default Phonebook;\n","import { Navigate } from 'react-router-dom';\nimport { Box } from '@mui/material';\n\nimport { useAuth } from 'shared/hooks';\nimport Phonebook from 'modules/Phonebook/Phonebook';\n\nconst ContactsPage = () => {\n  const { isLoggedIn, isRefreshing } = useAuth();\n  const shouldRedirect = !isLoggedIn && !isRefreshing;\n\n  return shouldRedirect ? (\n    <Navigate to=\"/login\" />\n  ) : (\n    <Box sx={{ height: '100%', pt: 15 }}>\n      <Phonebook />\n    </Box>\n  );\n};\n\nexport default ContactsPage;\n","import { useState, useCallback } from 'react';\n\nexport const useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(e => {\n    const { name, value } = e.target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n"],"names":["Text","styled","error","initialState","name","number","type","required","label","onSubmit","useForm","state","handleChange","handleSubmit","Box","component","sx","display","flexDirection","TextField","pattern","title","value","onChange","margin","fields","Button","variant","id","onDelete","ListItem","justifyContent","pt","Typography","ml","onClick","ContactList","contacts","List","map","defaultProps","width","selectContacts","items","selectIsLoading","isLoading","selectError","selectFilteredContacts","normalizedFilter","filter","toLowerCase","includes","selectFilter","useSelector","filteredContacts","dispatch","useDispatch","useEffect","fetchContacts","textAlign","fontSize","mb","Grid","container","xs","sm","gap","md","item","contact","find","alert","addContact","alignSelf","e","setFilter","target","length","deleteContact","Loader","useAuth","isLoggedIn","isRefreshing","to","height","useState","setState","useCallback","prevState","preventDefault"],"sourceRoot":""}