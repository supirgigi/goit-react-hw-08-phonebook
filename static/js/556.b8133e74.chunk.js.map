{"version":3,"file":"static/js/556.b8133e74.chunk.js","mappings":"wQAgBA,EAhBe,CACbA,MAAO,CACLC,KAAM,QACNC,KAAM,QACNC,UAAU,EACVC,MAAO,SAGTC,SAAU,CACRJ,KAAM,WACNC,KAAM,WACNC,UAAU,EACVC,MAAO,aCPX,EALqB,CACnBJ,MAAO,GACPK,SAAU,I,UCiDZ,EA5CkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDC,aAAAA,EACAF,SAAAA,IAFMG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAKrBX,EAAoBS,EAApBT,MAAOK,EAAaI,EAAbJ,SAEf,OACE,UAACO,EAAA,EAAD,CACEC,UAAU,OACVP,SAAUK,EACVG,GAAI,CACFC,KAAM,EACNC,QAAS,OACTC,cAAe,SACfC,GAAI,EACJC,SAAU,IACVC,EAAG,QATP,WAYE,SAACC,EAAA,GAAD,QACEC,OAAO,SACPC,MAAOvB,EACPwB,SAAUd,GACNe,EAAAA,SAEN,SAACJ,EAAA,GAAD,QACEC,OAAO,SACPC,MAAOlB,EACPmB,SAAUd,GACNe,EAAAA,YAEN,SAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY1B,KAAK,SAAjC,qBAKL,E,SCND,EA/BkB,WAChB,IAAQ2B,GAAeC,EAAAA,EAAAA,KAAfD,WACFE,GAAWC,EAAAA,EAAAA,MAMjB,OAAIH,GACK,SAAC,KAAD,CAAUI,GAAG,eAIpB,SAACpB,EAAA,EAAD,CACEE,GAAI,CACFmB,OAAQ,OACRjB,QAAS,OACTkB,eAAgB,SAChBC,WAAY,UALhB,UAQE,UAACvB,EAAA,EAAD,CAAKE,GAAI,CAAEC,KAAM,EAAGqB,GAAI,IAAxB,WACE,SAACC,EAAA,EAAD,CAAYV,QAAQ,KAAKb,GAAI,CAAEwB,UAAW,UAA1C,oBAGA,SAAC,EAAD,CAAWhC,SArBG,SAAAiC,GAClBT,GAASU,EAAAA,EAAAA,IAAUD,GACpB,QAuBF,C","sources":["modules/LoginForm/fields.js","modules/LoginForm/initialState.js","modules/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'email',\n  },\n\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'password',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","import { TextField, Button, Box } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nimport { useForm } from 'shared/hooks';\nimport fields from './fields';\nimport initialState from './initialState';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { email, password } = state;\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      sx={{\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        pt: 4,\n        maxWidth: 400,\n        m: 'auto',\n      }}\n    >\n      <TextField\n        margin=\"normal\"\n        value={email}\n        onChange={handleChange}\n        {...fields.email}\n      />\n      <TextField\n        margin=\"normal\"\n        value={password}\n        onChange={handleChange}\n        {...fields.password}\n      />\n      <Button variant=\"contained\" type=\"submit\">\n        Login\n      </Button>\n    </Box>\n  );\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { useAuth } from 'shared/hooks';\nimport { authLogIn } from 'redux/auth/auth-operations';\nimport LoginForm from 'modules/LoginForm';\nimport { Box, Typography } from '@mui/material';\n\nconst LoginPage = () => {\n  const { isLoggedIn } = useAuth();\n  const dispatch = useDispatch();\n\n  const handleLogIn = cred => {\n    dispatch(authLogIn(cred));\n  };\n\n  if (isLoggedIn) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return (\n    <Box\n      sx={{\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <Box sx={{ flex: 1, pb: 10 }}>\n        <Typography variant=\"h4\" sx={{ textAlign: 'center' }}>\n          Login\n        </Typography>\n        <LoginForm onSubmit={handleLogIn} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default LoginPage;\n"],"names":["email","type","name","required","label","password","onSubmit","useForm","initialState","state","handleChange","handleSubmit","Box","component","sx","flex","display","flexDirection","pt","maxWidth","m","TextField","margin","value","onChange","fields","Button","variant","isLoggedIn","useAuth","dispatch","useDispatch","to","height","justifyContent","alignItems","pb","Typography","textAlign","cred","authLogIn"],"sourceRoot":""}